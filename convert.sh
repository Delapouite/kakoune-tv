#!/bin/bash

# this script converts kakoune keys to xdotool instructions
# note: my shell-fu is very limited so it's a bit lame for now

if [ $# -eq 0 ]; then
  # it must point to a valid dir with a cmd file inside
  echo 'You need to provide a valid VimGolf id'
  exit
fi

# path of the generated xdotool series of commands
dest="xdokeys/$1.sh"

cmd=$(cat "$1/cmd")
# remove the ,q setup by mawww, rec.sh will add the corresponding :q command
keys="${cmd::-2}"

echo "$keys"

# split using ¤ as a separator
splited=$(echo "$keys" | sed -r 's/<((c-.|a-.)|(c-|a-)?(ret|space|tab|lt|gt|backspace|esc|up|down|left|right|pageup|pagedown|home|end|backtab|del))>|./¤\0/g')

echo '# File autogenerated by convert.sh' > $dest

IFS='¤' read -ra S <<< "$splited"
for i in "${S[@]}"; do
  # by default use the xdotool key command
  c='key'
  case $i in
    # translate to X Keysym
    '<ret>')       k='Return' ;;
    '<space>')     k='space' ;;
    '<tab>')       k='Tab' ;;
    '<lt>')        k='less' ;;
    '<gt>')        k='greater' ;;
    '<backspace>') k='BackSpace' ;;
    '<esc>')       k='Escape' ;;
    '<up>')        k='Up' ;;
    '<down>')      k='Down' ;;
    '<left>')      k='Left' ;;
    '<right>')     k='Right' ;;
    '<pageup>')    k='Page_Up' ;;
    '<pagedown>')  k='Page_Down' ;;
    '<home>')      k='Home' ;;
    '<end>')       k='End' ;;
    '<backtab>')   k='BackTab' ;;
    '<del>')       k='Delete' ;;

    # TODO DRY
    '<c-ret>')       k='ctrl+Return' ;;
    '<c-space>')     k='ctrl+space' ;;
    '<c-tab>')       k='ctrl+Tab' ;;
    '<c-lt>')        k='ctrl+less' ;;
    '<c-gt>')        k='ctrl+greater' ;;
    '<c-backspace>') k='ctrl+BackSpace' ;;
    '<c-esc>')       k='ctrl+Escape' ;;
    '<c-up>')        k='ctrl+Up' ;;
    '<c-down>')      k='ctrl+Down' ;;
    '<c-left>')      k='ctrl+Left' ;;
    '<c-right>')     k='ctrl+Right' ;;
    '<c-pageup>')    k='ctrl+Page_Up' ;;
    '<c-pagedown>')  k='ctrl+Page_Down' ;;
    '<c-home>')      k='ctrl+Home' ;;
    '<c-end>')       k='ctrl+End' ;;
    '<c-backtab>')   k='ctrl+BackTab' ;;
    '<c-del>')       k='ctrl+Delete' ;;

    '<a-ret>')       k='alt+Return' ;;
    '<a-space>')     k='alt+space' ;;
    '<a-tab>')       k='alt+Tab' ;;
    '<a-lt>')        k='alt+less' ;;
    '<a-gt>')        k='alt+greater' ;;
    '<a-backspace>') k='alt+BackSpace' ;;
    '<a-esc>')       k='alt+Escape' ;;
    '<a-up>')        k='alt+Up' ;;
    '<a-down>')      k='alt+Down' ;;
    '<a-left>')      k='alt+Left' ;;
    '<a-right>')     k='alt+Right' ;;
    '<a-pageup>')    k='alt+Page_Up' ;;
    '<a-pagedown>')  k='alt+Page_Down' ;;
    '<a-home>')      k='alt+Home' ;;
    '<a-end>')       k='alt+End' ;;
    '<a-backtab>')   k='alt+BackTab' ;;
    '<a-del>')       k='alt+Delete' ;;
    '<a-`>')         k='alt+grave' ;;
    '<a-:>')         k='alt+colon' ;;
    '<a-;>')         k='alt+semicolon' ;;
    '<a-&>')         k='alt+ampersand' ;;
    '<a-/>')         k='alt+slash' ;;
    '<a-\>')         k='alt+backslash' ;;
    "<a-'>")         k='alt+apostrophe' ;;

    # substring: from, length
    \<c-*)         k="ctrl+${i:3:1}" ;;
    \<a-*)         k="alt+${i:3:1}" ;;

    *)             k=$i; c='type' ;;
  esac
  if [[ ! -z $k ]]; then
    # TODO use less than 1 sec for insert mode
    echo 'sleep 1' >> $dest
    echo "xdotool $c '$k'" >> $dest
  fi
done

